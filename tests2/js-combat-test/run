#!/usr/bin/env node

// --------------------------------------------------------------------------------------------
// combat-test
//  --------------------------------------------------------------------------------------------
// This test is a port of cryptomechanics/doh-unit-tests/combat-test.sh from August, 2023.
// It is a simple test where 3 chars are in battle, damaging each other.
// This test will fail if the combat math changes, for example; in that case, the test has
//   to be updated with the new values.
// --------------------------------------------------------------------------------------------

Object.assign(global, require('DoHTestDriver'));
Object.assign(global, require('DoHTest'));

// --------------------------------------------------------------------------------------------
// Set up the test
// --------------------------------------------------------------------------------------------

// global variables required by init()
doh_target = "hg3";
tcn_target = "tc3";
doh_gm     = "dohplayer1";

init();

// --------------------------------------------------------------------------------------------
// Testcase
// --------------------------------------------------------------------------------------------

let expected;
let actual;

console.log("TEST: testcase started.\n");

createBasicGame();
createBasicPlayers();

cth_cleos(`push action clock.${doh_target} sethash '{"hash":"092ba25b75b0ee1ac79c5a1aa1df28a5129cd8d15b878fdb50dc804fda79dbc8"}' --force-unique -p clock.${doh_target}`) ? crashed() : null;

cth_cleos(`push action hegemon.${doh_target} docombat '{"player":"dohplayer1", "faction_id":4}' --force-unique -p dohplayer1`) ? crashed() : null;
cth_cleos(`push action clock.${doh_target} clockaddsec '{"seconds":120}' --force-unique -p clock.${doh_target}`) ? crashed() : null;
cth_cleos(`push action hegemon.${doh_target} updaterng '{}' --force-unique -p hegemon.${doh_target}`) ? crashed() : null;
cth_cleos(`push action hegemon.${doh_target} resolverngs '{"count":0}' --force-unique -p hegemon.${doh_target}`) ? crashed() : null;
cth_cleos(`push action hegemon.${doh_target} proc '{"count":0}' --force-unique -p hegemon.${doh_target}`) ? crashed() : null;

expected = 9;
actual = cth_cleos_pipe(`get table hegemon.${doh_target} hegemon.${doh_target} battleunits --lower 3 --limit 1 | jq .rows[0].hp`);
actual === undefined ? crashed() : null;

cth_assert(`asserting battle round 1 -> unit 3 hp == ${expected}`, `${expected} == ${actual}`) ? failed() : null;

cth_cleos(`push action clock.${doh_target} clockaddsec '{"seconds":120}' --force-unique -p clock.${doh_target}`) ? crashed() : null;

cth_cleos(`push action hegemon.${doh_target} updaterng '{}' --force-unique  -p hegemon.${doh_target}`) ? crashed() : null;
cth_cleos(`push action hegemon.${doh_target} resolverngs '{"count":0}' --force-unique -p hegemon.${doh_target}`) ? crashed() : null;
cth_cleos(`push action hegemon.${doh_target} proc '{"count":0}' --force-unique -p hegemon.${doh_target}`) ? crashed() : null;

expected = 8;
actual = cth_cleos_pipe(`get table hegemon.${doh_target} hegemon.${doh_target} battleunits --lower 1 --limit 1 | jq .rows[0].hp`);
actual === undefined ? crashed() : null;

cth_assert(`asserting battle round 2 -> unit 1 hp == $expected`, `${expected} == ${actual}`) ? failed() : null;

cth_cleos(`push action hegemon.${doh_target} doretreat '{"player":"dohplayer1", "destination_tile_id":2}' --force-unique  -p dohplayer1 `) ? crashed() : null;

cth_cleos(`push action clock.${doh_target} sethash '{"hash":"092ba25b75b0ee1ac79c5a1aa1df28a5129cd8d15b878fdb50dc804fda79dbc2"}' --force-unique -p clock.${doh_target}`) ? crashed() : null;

cth_cleos(`push action clock.${doh_target} clockaddsec '{"seconds":120}' --force-unique -p clock.${doh_target}`) ? crashed() : null;
cth_cleos(`push action hegemon.${doh_target} updaterng '{}' --force-unique -p hegemon.${doh_target}`) ? crashed() : null;
cth_cleos(`push action hegemon.${doh_target} resolverngs '{"count":0}' --force-unique -p hegemon.${doh_target}`) ? crashed() : null;
cth_cleos(`push action hegemon.${doh_target} proc '{"count":0}' --force-unique -p hegemon.${doh_target}`) ? crashed() : null;

expected = 1;
actual = cth_cleos_pipe(`get table hegemon.${doh_target} hegemon.${doh_target} players --lower dohplayer1 --limit 1 --index 2 --key-type i64 | jq .rows[0].location_tile_id`);
actual === undefined ? crashed() : null;

cth_assert(`played dohplayer1 failed retreating : still on tile ${expected}`, `${expected} == ${actual}`) ? failed() : null;

cth_cleos(`push action clock.${doh_target} sethash '{"hash":"092ba25b75b0ee1ac79c5a1aa1df28a5129cd8d15b878fdb50dc804fda79dbc5"}' --force-unique -p clock.${doh_target}`) ? crashed() : null;

cth_cleos(`push action clock.${doh_target} clockaddsec '{"seconds":120}' --force-unique -p clock.${doh_target}`) ? crashed() : null;
cth_cleos(`push action hegemon.${doh_target} updaterng '{}' --force-unique -p hegemon.${doh_target}`) ? crashed() : null;
cth_cleos(`push action hegemon.${doh_target} resolverngs '{"count":0}' --force-unique -p hegemon.${doh_target}`) ? crashed() : null;

let expected_checksum256 = '3786e2d0a8286823a1586b3996537d106e32779c8bf0d732c0c12a0d3e3611fd';

let actual_checksum256 = cth_cleos_pipe(`push action hegemon.${doh_target} proc '{"count":0}' --force-unique -p hegemon.${doh_target} --json | jq .processed.action_traces[1].console | awk -F "checksum256:" '{print substr(\$NF, 1, 64)}'`);
actual_checksum256 === undefined ? crashed() : null;

actual_checksum256 = actual_checksum256.trim();

expected = 2;
actual = cth_cleos_pipe(`get table hegemon.${doh_target} hegemon.${doh_target} players --lower dohplayer1 --limit 1 --index 2 --key-type i64 | jq .rows[0].location_tile_id`);
actual === undefined ? crashed() : null;

cth_assert(`played dohplayer1 successfully retreated to tile ${expected}`, `${expected} == ${actual}`) ? failed() : null;

cth_assert(`last derived hash is ${expected_checksum256}`, `'${expected_checksum256}' == '${actual_checksum256}'`) ? failed() : null;

// --------------------------------------------------------------------------------------------
// Test done
// --------------------------------------------------------------------------------------------

finish();

console.log("TEST: completed successfully.\n");
