#!/usr/bin/env node

// ---------------------------------------------------------------------------------------
// Minimal demonstration that the DoHTestLib can be found, loaded and invoked.
// Doesn't actually run nodeos or anything.
// This file is just a lab that I'm using to test random client-side blockchain stuff
//   with javascript.
// ---------------------------------------------------------------------------------------

// Import the DoHTestLib.js library that is somewhere under cth/tools/
const driverlib = require('DoHTestDriver');
Object.assign(global, require('DoHTest'));
Object.assign(global, require('DoHTestFixture'));

// Call the args parser helper
const switchesStr = 'cleos_url target';
const optionsStr = '';
const [switches, options] = driverlib.cth_standard_args_parser(switchesStr, optionsStr);

console.log('Switches:', switches);
console.log('Options:', options);

fixtureInit("dohplayer1", "hg3", "tc3");

createBasicGame();
createBasicPlayers();
createBasicEconomy();

// --------------------------------------------------------------------------
// getProxyForContract POC
// --------------------------------------------------------------------------

console.log("**************************************************************************************************");
console.log("**************************************************************************************************");
console.log("**************************************************************************************************");
console.log("**************************************************************************************************");

const reflect = require('DoHTestReflect');

const tokens = reflect.getProxyForContract(`tokens.${tcn_target}`);
const meta = reflect.getProxyForContract(`meta.${doh_target}`);

meta.setregion( {"id":1, "planet_id":1, "region_name":"region_1"} );
meta.init(TIME_POINT_MAX, TIME_POINT_MAX);

meta.setplayer( {"owner":"dohplayer1", "asset_url":"none", "referrer":"", "faction_id":1, "last_staking_action":TIME_POINT_MIN, "last_bid_action":TIME_POINT_MIN, "last_transfer_action":TIME_POINT_MIN, "last_reqinvite_action":TIME_POINT_MIN, "actions":0, "actions_reset_time":TIME_POINT_MIN} );

meta._setSigner("dohplayer1");
meta.open("dohplayer1", "4,TCN", "dohplayer1");

tokens._setSigner(`hegemon.${doh_target}`);
tokens.transfer(`hegemon.${doh_target}`, "dohplayer1", "100000.0000 TCN", "");

tokens._setSigner("dohplayer1");
tokens.transfer("dohplayer1",`meta.${doh_target}`, "10000.0000 TCN", "deposit");

meta.dostake("dohplayer1", "0.0001 TCN", 1);

meta._setSelfSigner();
meta.clear();

console.log("**************************************************************************************************");
console.log("**************************************************************************************************");
console.log("**************************************************************************************************");
console.log("**************************************************************************************************");

fixtureFinish();
