#!/usr/bin/perl

# --------------------------------------------------------------------------------------------
# Driver: doh-hotstart
# Operation: install
#
# start coldstart & doh-coldstart to generate a chainbase directory and save it on /local/
#   to start multiple hotstart
# see start for more docs.
#
#*********************************************************************************************
# NOTE: generated chainbase is hardcoded for target 'test' (hg3/tc3) since
#       doh-coldstart is also presently hardcoded for that target.
#*********************************************************************************************
#
# --------------------------------------------------------------------------------------------

use strict;
use warnings;
#use Time::HiRes qw(sleep);
use Scalar::Util qw(looks_like_number);
#use File::Path qw(make_path);
#use File::Spec::Functions qw(rel2abs);
#use FindBin '$RealBin';
use FindBin qw($RealBin);

use lib "$RealBin/../../tools/cth-utils";
use CthUtils;

$| = 1;  # Turn on auto-flush for STDOUT (Perl doesn't do this by default)

# Relative to this script's location, might have to create/recreate
my $working_dir          = "../../local/doh-hotstart";
my $template_dir         = "$working_dir/nodeos-template";

# All are relative to this script's location and must already exist
my $coldstart_dir        = "../coldstart";
my $doh_coldstart_dir    = "../doh-coldstart";
my $source_template_dir  = "../../local/coldstart";

my $verbose = 1;

my $cmd;
my $o;

# --------------------------------------------------------------------------------------------
# We have to force the working directory to where the driver script is.
# Also resolve dirs that already should exist to absolute locations for better prints.
# --------------------------------------------------------------------------------------------

chdir_for_sure($RealBin);
#if (chdir($RealBin)) {
#    if ($verbose) { print "Forced working directory to driver start script location: $RealBin\n"; }
#} else {
#    print "ERROR: Failed to change working directory: $!\n";
#    exit 1;
#}

print "doh-hotstart install: ensuring coldstart_dir exists ('$RealBin/$coldstart_dir') ...\n";
$coldstart_dir        = absolute($coldstart_dir, CthUtils::ABSOLUTE_MUST_EXIST);

print "doh-hotstart install: ensuring doh_coldstart_dir exists ('$RealBin/$doh_coldstart_dir') ...\n";
$doh_coldstart_dir    = absolute($doh_coldstart_dir, CthUtils::ABSOLUTE_MUST_EXIST);

print "doh-hotstart install: ensuring source_template_dir exists ('$RealBin/$source_template_dir') ...\n";
$source_template_dir  = absolute($source_template_dir, CthUtils::ABSOLUTE_MUST_EXIST);

# --------------------------------------------------------------------------------------------
# Clear and start the backing doh-coldstart driver.
# --------------------------------------------------------------------------------------------

print "doh-hotstart install: Clearing doh-coldstart ...\n";

$cmd = "$doh_coldstart_dir/clear";
$o = `$cmd 2>&1`;
if ($? != 0) {
    print "ERROR: doh-hotstart install: doh-coldstart clear returned an error code.\n";
    print "Output: $o\n";
    exit 1;
}

print "doh-hotstart install: Starting doh-coldstart for the DoH 'test' target...\n";

# NOTE: hardcoded target 'test' (same as 'hg3', which also works)
$cmd = "$doh_coldstart_dir/start --target test";
$o = `$cmd 2>&1`;
if ($? != 0) {
    print "ERROR: doh-hotstart install: doh-coldstart start returned an error code.\n";
    print "Output: $o\n";
    exit 1;
}

# --------------------------------------------------------------------------------------------
# Wait a bit (probably not needed)
# --------------------------------------------------------------------------------------------

sleep(3);

# --------------------------------------------------------------------------------------------
# Stop coldstart
# --------------------------------------------------------------------------------------------

print "doh-hotstart install: Stopping coldstart ...\n";

$cmd = "$coldstart_dir/stop";
$o = `$cmd 2>&1`;
if ($? != 0) {
    print "ERROR: doh-hotstart install: coldstart stop returned an error code.\n";
    print "Output: $o\n";
    exit 1;
}

# --------------------------------------------------------------------------------------------
# Wait a bit (probably not needed)
# --------------------------------------------------------------------------------------------

sleep(3);

# --------------------------------------------------------------------------------------------
# local/coldstart/ now contains an Antelope blockchain with DoH accounts and contracts
#   deployed. coldstart's nodeos is stopped, so we can copy that entire data directory
#   over to local/doh-hotstart/nodeos-template/, which we can use for hotstart tests
#   to start from.
# --------------------------------------------------------------------------------------------

#
# Create entire local/doh-hotstart/nodeos-template/ path
# This creates the $working_dir indirectly
#
#my $abs_template_dir = rel2abs("$template_dir");
#if (!-d $abs_template_dir && !make_path($abs_template_dir)) {
#    print "ERROR: Failed to create path for abs_working_dir '$abs_template_dir': $!\n";
#    exit 1;
#}
my $abs_template_dir = absolute($template_dir, CthUtils::ABSOLUTE_ENSURE_CREATE);

#
# Resolve the $working_dir as well now that we know it exists
#
$working_dir = absolute($working_dir, CthUtils::ABSOLUTE_MUST_EXIST);

#
# Actually rm -rf the template dir itself because we will copy over the new content
#
print "Deleting $abs_template_dir/* (if it exists)\n";
print `rm -rf $abs_template_dir/*`;

#
# Copy the new content
#
print "Copying (cp -r) $source_template_dir/* to $abs_template_dir\n";
print `cp -r $source_template_dir/* $abs_template_dir`;

if ($? != 0) {
    die "ERROR: doh-hotstart install: Failed to copy nodeos data directory over from local/coldstart/* : $!\n";
}

#
# Save an ls -lR of the nodeos state dir template in the install.log
#
print "-----------------------------------------------------------------------------------\n";
print `ls -lR $abs_template_dir`;
print "-----------------------------------------------------------------------------------\n";

print "doh-hotstart install: DoH quick-start chainbase generated and installed successfully.\n";

# --------------------------------------------------------------------------------------------
# Create the global lock file (used for instance-dir creation synchronization).
# Can't create this before the local/doh_hostart directory is created, so do it here.
# --------------------------------------------------------------------------------------------

if (system("touch $working_dir/lock_file") != 0) {
    die "ERROR: failed to create global lock file '$working_dir/lock_file'\n";
}

# --------------------------------------------------------------------------------------------
# Clear doh-coldstart
# --------------------------------------------------------------------------------------------

print "doh-hotstart install: Clearing doh-coldstart (finishing)...\n";

$cmd = "$doh_coldstart_dir/clear";
$o = `$cmd 2>&1`;
if ($? != 0) {
    print "ERROR: doh-hotstart install: doh-coldstart clear returned an error code.\n";
    print "Output: $o\n";
    exit 1;
}

# --------------------------------------------------------------------------------------------
# Done
# --------------------------------------------------------------------------------------------

print "doh-hotstart install: Installation finished successfully.\n";
