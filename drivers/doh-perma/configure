#!/usr/bin/perl

use strict;
use warnings;
use Getopt::Long;
use File::Path qw(make_path remove_tree);

use FindBin qw($RealBin);
if (!chdir($RealBin)) {
    print "ERROR: Failed to change working directory: $!\n";
    exit 1;
}

my $config_file = "driver.ini";
my $opt_target;
my $opt_reset;
my $opt_help;
my $opt_get;

GetOptions(
    "help|h"   => \$opt_help,
    "target=s" => \$opt_target,
    "reset"    => \$opt_reset,
    "get=s"    => \$opt_get
) or die "ERROR: invalid command line. Use --help to see usage.";

if ($opt_help) {
    print "Usage: configure [--target=hgm|hg1|hg2|...] [--reset] [--get=target|...] [--help|-h]\n";
    exit;
}

if ($opt_reset) {
    if (-e $config_file) {
        unlink $config_file;
        print "Deleted $config_file\n";
    } else {
        print "$config_file does not exist\n";
    }
    exit;
}

if (-e $config_file) {
    if ($opt_get) {
        my $value = get_key_from_ini($config_file, $opt_get);
        print "$value\n" if defined $value;
    } elsif ($opt_target) {
        update_target_in_ini($config_file, $opt_target);
    } else {
        print "Content of $config_file:\n";
        print_ini_content($config_file);
    }
} else {
    if ($opt_get) {
        # do/print nothing
    } elsif ($opt_target) {
        create_ini_with_target($config_file, $opt_target);
    } else {
        print "$config_file does not exist\n";
    }
}

sub update_target_in_ini {
    my ($file, $target) = @_;
    my $backup_file = "$file.bak";

    open(my $in_fh, "<", $file) or die "ERROR: opening $file: $!";
    open(my $out_fh, ">", $backup_file) or die "ERROR: creating $backup_file: $!";

    while (my $line = <$in_fh>) {
        chomp $line;
        if ($line =~ /^target\s*=\s*(.*)/) {
            $line = "target = $target";
        }
        print $out_fh "$line\n";
    }

    close($in_fh);
    close($out_fh);

    unlink $file;
    rename $backup_file, $file;
    print "Updated $file with target = $target\n";
}

sub create_ini_with_target {
    my ($file, $target) = @_;
    open(my $fh, ">", $file) or die "ERROR: creating $file: $!";
    print $fh "target = $target\n";
    close($fh);
    print "Created $file with target = $target\n";
}

sub print_ini_content {
    my ($file) = @_;
    open(my $fh, "<", $file) or die "ERROR: opening $file: $!";
    while (my $line = <$fh>) {
        chomp $line;
        print "$line\n";
    }
    close($fh);
}

sub get_key_from_ini {
    my ($file, $key) = @_;
    open(my $fh, "<", $file) or die "Error opening $file: $!";
    while (my $line = <$fh>) {
        chomp $line;
        if ($line =~ /^\s*$key\s*=\s*(.*)/) {
            close($fh);
            return $1;
        }
    }
    close($fh);
    return undef;
}
